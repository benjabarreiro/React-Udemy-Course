{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const res = await fetch(\"https://react-http-udemy-68c21-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!res.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await res.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (err) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data\"\n    }));\n\n    const sendRequest = async () => {\n      const res = await fetch(\"https://react-http-udemy-68c21-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/advance-redux/src/store/cart-actions.js"],"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","res","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","err","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","error"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,sEADqB,CAAvB;;AAIA,UAAI,CAACD,GAAG,CAACE,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AAEA,aAAOD,IAAP;AACD,KAZD;;AAaA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CACNF,WAAW,CAACW,WAAZ,CAAwB;AACtBC,QAAAA,KAAK,EAAEF,QAAQ,CAACE,KAAT,IAAkB,EADH;AAEtBC,QAAAA,aAAa,EAAEH,QAAQ,CAACG;AAFF,OAAxB,CADM,CAAR;AAMD,KARD,CAQE,OAAOC,GAAP,EAAY;AACZZ,MAAAA,QAAQ,CACNH,SAAS,CAACgB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA/BD;AAgCD,CAjCM;AAmCP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOlB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNH,SAAS,CAACgB,gBAAV,CAA2B;AACzBC,MAAAA,MAAM,EAAE,SADiB;AAEzBC,MAAAA,KAAK,EAAE,YAFkB;AAGzBC,MAAAA,OAAO,EAAE;AAHgB,KAA3B,CADM,CAAR;;AAOA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMjB,GAAG,GAAG,MAAMC,KAAK,CACrB,sEADqB,EAErB;AACEiB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBb,UAAAA,KAAK,EAAEQ,IAAI,CAACR,KADO;AAEnBC,UAAAA,aAAa,EAAEO,IAAI,CAACP;AAFD,SAAf;AAFR,OAFqB,CAAvB;;AAUA,UAAI,CAACT,GAAG,CAACE,EAAT,EAAa;AACX,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAdD;;AAeA,QAAI;AACF,YAAMc,WAAW,EAAjB;AAEAnB,MAAAA,QAAQ,CACNH,SAAS,CAACgB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,SADiB;AAEzBC,QAAAA,KAAK,EAAE,SAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD,KAVD,CAUE,OAAOQ,KAAP,EAAc;AACdxB,MAAAA,QAAQ,CACNH,SAAS,CAACgB,gBAAV,CAA2B;AACzBC,QAAAA,MAAM,EAAE,OADiB;AAEzBC,QAAAA,KAAK,EAAE,OAFkB;AAGzBC,QAAAA,OAAO,EAAE;AAHgB,OAA3B,CADM,CAAR;AAOD;AACF,GA1CD;AA2CD,CA5CM","sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const res = await fetch(\n        \"https://react-http-udemy-68c21-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await res.json();\n\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(\n        cartActions.replaceCart({\n          items: cartData.items || [],\n          totalQuantity: cartData.totalQuantity,\n        })\n      );\n    } catch (err) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data\",\n      })\n    );\n    const sendRequest = async () => {\n      const res = await fetch(\n        \"https://react-http-udemy-68c21-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            items: cart.items,\n            totalQuantity: cart.totalQuantity,\n          }),\n        }\n      );\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}