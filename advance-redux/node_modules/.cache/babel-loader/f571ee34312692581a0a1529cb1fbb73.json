{"ast":null,"code":"var _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/advance-redux/src/components/Shop/ProductItem.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProductItem = props => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    title,\n    price,\n    description,\n    id\n  } = props;\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n    const updatedItems = cart.items.slice();\n    const exisitingItem = updatedItems.find(item => item.id === id);\n\n    if (exisitingItem) {\n      const updatedItem = { ...exisitingItem\n      };\n      updatedItem.quantity++;\n      updatedItem.price = updatedItem.price + price;\n      const exisitingItemIndex = updatedItems.findIndex(item => item.id === id);\n      updatedItems[exisitingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id,\n        price,\n        quantity: 1,\n        totalPrice: price,\n        name: title\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems\n    };\n    dispatch(cartActions.addItemToCart(\n    /* {\n    id,\n    title,\n    price,\n    } */\n    newCart));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.price,\n          children: [\"$\", price.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addToCartHandler,\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItem, \"ecWlw9hQmiN1BKXN3G5mczU/ZzA=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductItem;\nexport default ProductItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItem\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/advance-redux/src/components/Shop/ProductItem.js"],"names":["Card","classes","useDispatch","useSelector","cartActions","ProductItem","props","cart","state","title","price","description","id","dispatch","addToCartHandler","newTotalQuantity","totalQuantity","updatedItems","items","slice","exisitingItem","find","item","updatedItem","quantity","exisitingItemIndex","findIndex","push","totalPrice","name","newCart","addItemToCart","toFixed","actions"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAMC,IAAI,GAAGJ,WAAW,CAAEK,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAoCN,KAA1C;AACA,QAAMO,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,gBAAgB,GAAGR,IAAI,CAACS,aAAL,GAAqB,CAA9C;AAEA,UAAMC,YAAY,GAAGV,IAAI,CAACW,KAAL,CAAWC,KAAX,EAArB;AACA,UAAMC,aAAa,GAAGH,YAAY,CAACI,IAAb,CAAmBC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAxC,CAAtB;;AACA,QAAIQ,aAAJ,EAAmB;AACjB,YAAMG,WAAW,GAAG,EAAE,GAAGH;AAAL,OAApB;AACAG,MAAAA,WAAW,CAACC,QAAZ;AACAD,MAAAA,WAAW,CAACb,KAAZ,GAAoBa,WAAW,CAACb,KAAZ,GAAoBA,KAAxC;AAEA,YAAMe,kBAAkB,GAAGR,YAAY,CAACS,SAAb,CACxBJ,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EADG,CAA3B;AAGAK,MAAAA,YAAY,CAACQ,kBAAD,CAAZ,GAAmCF,WAAnC;AACD,KATD,MASO;AACLN,MAAAA,YAAY,CAACU,IAAb,CAAkB;AAChBf,QAAAA,EADgB;AAEhBF,QAAAA,KAFgB;AAGhBc,QAAAA,QAAQ,EAAE,CAHM;AAIhBI,QAAAA,UAAU,EAAElB,KAJI;AAKhBmB,QAAAA,IAAI,EAAEpB;AALU,OAAlB;AAOD;;AAED,UAAMqB,OAAO,GAAG;AACdd,MAAAA,aAAa,EAAED,gBADD;AAEdG,MAAAA,KAAK,EAAED;AAFO,KAAhB;AAIAJ,IAAAA,QAAQ,CACNT,WAAW,CAAC2B,aAAZ;AACE;AACR;AACA;AACA;AACA;AAAWD,IAAAA,OALL,CADM,CAAR;AASD,GArCD;;AAuCA,sBACE;AAAI,IAAA,SAAS,EAAE7B,OAAO,CAACqB,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAKb;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAER,OAAO,CAACS,KAAxB;AAAA,0BAAiCA,KAAK,CAACsB,OAAN,CAAc,CAAd,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,kBAAIrB;AAAJ;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACgC,OAAxB;AAAA,+BACE;AAAQ,UAAA,OAAO,EAAEnB,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1DD;;GAAMT,W;UACSF,W,EAEID,W;;;KAHbG,W;AA4DN,eAAeA,WAAf","sourcesContent":["import Card from \"../UI/Card\";\nimport classes from \"./ProductItem.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { cartActions } from \"../../store/cart-slice\";\n\nconst ProductItem = (props) => {\n  const cart = useSelector((state) => state.cart);\n  const { title, price, description, id } = props;\n  const dispatch = useDispatch();\n\n  const addToCartHandler = () => {\n    const newTotalQuantity = cart.totalQuantity + 1;\n\n    const updatedItems = cart.items.slice();\n    const exisitingItem = updatedItems.find((item) => item.id === id);\n    if (exisitingItem) {\n      const updatedItem = { ...exisitingItem };\n      updatedItem.quantity++;\n      updatedItem.price = updatedItem.price + price;\n\n      const exisitingItemIndex = updatedItems.findIndex(\n        (item) => item.id === id\n      );\n      updatedItems[exisitingItemIndex] = updatedItem;\n    } else {\n      updatedItems.push({\n        id,\n        price,\n        quantity: 1,\n        totalPrice: price,\n        name: title,\n      });\n    }\n\n    const newCart = {\n      totalQuantity: newTotalQuantity,\n      items: updatedItems,\n    };\n    dispatch(\n      cartActions.addItemToCart(\n        /* {\n        id,\n        title,\n        price,\n      } */ newCart\n      )\n    );\n  };\n\n  return (\n    <li className={classes.item}>\n      <Card>\n        <header>\n          <h3>{title}</h3>\n          <div className={classes.price}>${price.toFixed(2)}</div>\n        </header>\n        <p>{description}</p>\n        <div className={classes.actions}>\n          <button onClick={addToCartHandler}>Add to Cart</button>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ProductItem;\n"]},"metadata":{},"sourceType":"module"}