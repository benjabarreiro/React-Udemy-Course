{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/index.js\";\nimport Head from \"next/head\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  /* const [loadedMeetups, setLoadedMeetups] = useState([]);\n  useEffect(() => {\n    setLoadedMeetups(DUMMY_MEETUPS);\n  }, []); */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n/* export async function getServerSideProps(context) { // it runs for every req. you use this if you need access to req or res or you have data that changes multiple times every second\n  const {req, res} = context;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  }\n} */\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/index.js"],"names":["Head","MeetupList","HomePage","props","meetups"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAGA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACF;AACA;AACA;AACE,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAvBSF,Q;;AAkDT,eAAeA,QAAf","sourcesContent":["import Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  /* const [loadedMeetups, setLoadedMeetups] = useState([]);\n  useEffect(() => {\n    setLoadedMeetups(DUMMY_MEETUPS);\n  }, []); */\n  return (\n    <>\n      <Head>\n        <title>React Meetups</title>\n      </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\n/* export async function getServerSideProps(context) { // it runs for every req. you use this if you need access to req or res or you have data that changes multiple times every second\n  const {req, res} = context;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  }\n} */\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://gandalf:thegrey@cluster0.g6ufp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1,\n  }; //you always need to return an object\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}