{"ast":null,"code":"import _defineProperty from \"/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/[meetupId]/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails(_ref) {\n  var meetupData = _ref.meetupData;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, _objectSpread({}, meetupData), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","meetupData"],"mappings":";;;;;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,OAAuC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AACrC,sBAAO,QAAC,YAAD,oBAAkBA,UAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KAFQD,a;;AAkDT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectID } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nfunction MeetupDetails({ meetupData }) {\n  return <MeetupDetail {...meetupData} />;\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://gandalf:thegrey@cluster0.g6ufp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray(); // --> only include the id but not other fields value\n\n  client.close();\n\n  return {\n    paths: meetups.map((meetup) => ({\n      params: {\n        meetupId: meetup._id.toString(),\n      },\n    })),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://gandalf:thegrey@cluster0.g6ufp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectID(meetupId),\n  });\n\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup,\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}