{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  /* const [loadedMeetups, setLoadedMeetups] = useState([]);\n  useEffect(() => {\n    setLoadedMeetups(DUMMY_MEETUPS);\n  }, []); */\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n/* export async function getServerSideProps(context) { // it runs for every req. you use this if you need access to req or res or you have data that changes multiple times every second\n  const {req, res} = context;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  }\n} */\n\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://gandalf:thegrey@cluster0.g6ufp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups\n    },\n    revalidate: 1\n  }; //you always need to return an object\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/nextjs-bigger-project/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACF;AACA;AACA;AACE,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,8FADmB,CAArB;AAIA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AACA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA;AADJ,KADF;AAILU,IAAAA,UAAU,EAAE;AAJP,GAAP,CAZqC,CAiBlC;AACJ;AAED,eAAeZ,QAAf","sourcesContent":["import { MongoClient } from 'mongodb'\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  /* const [loadedMeetups, setLoadedMeetups] = useState([]);\n  useEffect(() => {\n    setLoadedMeetups(DUMMY_MEETUPS);\n  }, []); */\n  return <MeetupList meetups={props.meetups} />;\n}\n\n/* export async function getServerSideProps(context) { // it runs for every req. you use this if you need access to req or res or you have data that changes multiple times every second\n  const {req, res} = context;\n\n  return {\n    props: {\n      meetups: DUMMY_MEETUPS\n    }\n  }\n} */\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://gandalf:thegrey@cluster0.g6ufp.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray()\n\n  client.close()\n  return {\n    props: {\n      meetups: meetups\n    },\n    revalidate: 1\n  }; //you always need to return an object\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}