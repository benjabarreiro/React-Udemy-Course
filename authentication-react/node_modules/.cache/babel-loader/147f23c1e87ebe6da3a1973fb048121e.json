{"ast":null,"code":"var _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/authentication-react/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token; // !! (not not) --> converts a falsey value to a true one\n\n  const loginHandler = token => {\n    setToken(token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"e+LEOB8XbRIRiSUQHKM4ToWFki4=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/authentication-react/src/store/auth-context.js"],"names":["createContext","useState","AuthContext","token","isLoggedIn","login","logout","AuthContextProvider","children","setToken","userIsLoggedIn","loginHandler","logoutHandler","contextValue"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC;AACvCG,EAAAA,KAAK,EAAE,EADgC;AAEvCC,EAAAA,UAAU,EAAE,KAF2B;AAGvCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHmB;AAIvCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJuB,CAAD,CAAjC;;AAOP,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMS,cAAc,GAAG,CAAC,CAACP,KAAzB,CAF4C,CAEZ;;AAEhC,QAAMQ,YAAY,GAAIR,KAAD,IAAW;AAC9BM,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACD,GAFD;;AAGA,QAAMS,aAAa,GAAG,MAAM;AAC1BH,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,YAAY,GAAG;AACnBV,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAEM,cAFO;AAGnBL,IAAAA,KAAK,EAAEM,YAHY;AAInBL,IAAAA,MAAM,EAAEM;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,YAA7B;AAAA,cAA4CL;AAA5C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;GAAMD,mB;;KAAAA,mB;AAuBN,eAAeA,mBAAf","sourcesContent":["import { createContext, useState } from \"react\";\n\nexport const AuthContext = createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst AuthContextProvider = ({ children }) => {\n  const [token, setToken] = useState(null);\n  const userIsLoggedIn = !!token; // !! (not not) --> converts a falsey value to a true one\n\n  const loginHandler = (token) => {\n    setToken(token);\n  };\n  const logoutHandler = () => {\n    setToken(null);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;\n"]},"metadata":{},"sourceType":"module"}