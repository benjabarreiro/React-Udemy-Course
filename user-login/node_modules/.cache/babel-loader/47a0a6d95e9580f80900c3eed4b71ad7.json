{"ast":null,"code":"var _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/user-login/src/context/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      loginHandler,\n      logoutHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/user-login/src/context/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","children","setIsLoggedIn","loginHandler","localStorage","setItem","logoutHandler","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE,CAFoB;AAGtCC,EAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnD,QAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMW,YAAY,GAAG,CAACL,KAAD,EAAQC,QAAR,KAAqB;AACxCK,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMI,aAAa,GAAG,MAAM;AAC1BF,IAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,UAAF;AAAcQ,MAAAA,YAAd;AAA4BG,MAAAA;AAA5B,KAA7B;AAAA,cACGL;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBM;;GAAMD,mB;;KAAAA,mB;AAmBb,eAAeP,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, loginHandler, logoutHandler }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}