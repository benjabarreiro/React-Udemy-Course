{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++; // this can be done with the toolkit. we are not really manipulating the real state. \n    },\n\n    decrement() {},\n\n    increase() {},\n\n    toggleCounter() {}\n\n  }\n});\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/redux/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","toggleCounter","counterReducer","action","type","amount","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAArB;AAEAH,WAAW,CAAC;AACXI,EAAAA,IAAI,EAAE,SADK;AAEXH,EAAAA,YAFW;AAGXI,EAAAA,QAAQ,EAAE;AACTC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACL,OAAN,GADgB,CACA;AAChB,KAHQ;;AAITM,IAAAA,SAAS,GAAG,CAAE,CAJL;;AAKTC,IAAAA,QAAQ,GAAG,CAAE,CALJ;;AAMTC,IAAAA,aAAa,GAAG,CAAE;;AANT;AAHC,CAAD,CAAX;;AAaA,MAAMC,cAAc,GAAG,CAACJ,KAAK,GAAGN,YAAT,EAAuBW,MAAvB,KAAkC;AACvD,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgBU,MAAM,CAACE,MAD3B;AAELX,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,WAAO;AACLX,MAAAA,OAAO,EAAEK,KAAK,CAACL,OAAN,GAAgB,CADpB;AAELC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFd,KAAP;AAID;;AAED,MAAIS,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,WAAO;AACRV,MAAAA,WAAW,EAAE,CAACI,KAAK,CAACJ,WADZ;AAERD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFP,KAAP;AAID;;AAED,SAAOK,KAAP;AACD,CA9BD;;AAgCA,MAAMQ,KAAK,GAAGhB,WAAW,CAACY,cAAD,CAAzB;AAEA,eAAeI,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = { counter: 0, showCounter: true };\n\ncreateSlice({\n\tname: 'counter',\n\tinitialState,\n\treducers: {\n\t\tincrement(state) {\n\t\t\tstate.counter++ // this can be done with the toolkit. we are not really manipulating the real state. \n\t\t},\n\t\tdecrement() {},\n\t\tincrease() {},\n\t\ttoggleCounter() {}\n\t}\n})\n\nconst counterReducer = (state = initialState, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter,\n    };\n  }\n\n  if (action.type === \"toggle\") {\n    return {\n\t  showCounter: !state.showCounter,\n\t  counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}