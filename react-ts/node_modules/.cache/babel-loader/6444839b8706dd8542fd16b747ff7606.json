{"ast":null,"code":"var _jsxFileName = \"/Users/benjabarreiro/Documents/Notas-CursoReact/react-ts/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport NewToDo from \"./components/NewToDo\";\nimport ToDos from \"./components/ToDos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodoHandler = todoText => {\n    setTodos([...todos, todoText]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewToDo, {\n      onAddTodo: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDos, {\n      items: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/benjabarreiro/Documents/Notas-CursoReact/react-ts/src/App.tsx"],"names":["useState","NewToDo","ToDos","App","todos","setTodos","addTodoHandler","todoText"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,cAAc,GAAIC,QAAD,IAAsB;AAC3CF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWG,QAAX,CAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,SAAS,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAZQD,G;;KAAAA,G;AAcT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\";\nimport NewToDo from \"./components/NewToDo\";\nimport ToDos from \"./components/ToDos\";\nimport ToDo from './models/todo'\n\nfunction App() {\n  const [todos, setTodos] = useState([]) \n\n  const addTodoHandler = (todoText: string) => {\n    setTodos([...todos, todoText])\n  }\n  return (\n    <div>\n      <NewToDo onAddTodo={addTodoHandler}  />\n      <ToDos items={todos} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}